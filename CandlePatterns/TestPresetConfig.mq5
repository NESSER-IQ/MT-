//+------------------------------------------------------------------+
//|                                              TestPresetConfig.mq5 |
//|                                    ุงุฎุชุจุงุฑ ููู ุงูุฅุนุฏุงุฏุงุช ุงููุนุฏุฉ |
//|                         ุญููู ุงููุดุฑ 2025, ุนูู ุชู ููุชุฏุงูู ุงูุฐูู |
//+------------------------------------------------------------------+

#property copyright "ุญููู ุงููุดุฑ 2025, ุนูู ุชู ููุชุฏุงูู ุงูุฐูู"
#property link      "https://www.alitech-trading.com"
#property version   "1.00"
#property indicator_chart_window

// ุงุณุชูุฑุงุฏ ููู ุงูุฅุนุฏุงุฏุงุช
#include "Include/PresetConfigurations.mqh"

// ูุชุบูุฑ ุงูุฅุนุฏุงุฏุงุช
CPresetManager* g_presetManager;

//+------------------------------------------------------------------+
//| ุฏุงูุฉ ุงูุชููุฆุฉ                                                     |
//+------------------------------------------------------------------+
int OnInit()
{
   Print("๐ ุชููุฆุฉ ุงุฎุชุจุงุฑ ููู ุงูุฅุนุฏุงุฏุงุช...");
   
   // ุฅูุดุงุก ูุฏูุฑ ุงูุฅุนุฏุงุฏุงุช
   g_presetManager = new CPresetManager();
   
   if(g_presetManager == NULL)
   {
      Print("โ ูุดู ูู ุฅูุดุงุก ูุฏูุฑ ุงูุฅุนุฏุงุฏุงุช");
      return INIT_FAILED;
   }
   
   Print("โ ุชู ุฅูุดุงุก ูุฏูุฑ ุงูุฅุนุฏุงุฏุงุช ุจูุฌุงุญ");
   
   // ุงุฎุชุจุงุฑ ุงูุฅุนุฏุงุฏุงุช
   TestPresets();
   
   return INIT_SUCCEEDED;
}

//+------------------------------------------------------------------+
//| ุฏุงูุฉ ุงูุชูุธูู                                                    |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
{
   if(g_presetManager != NULL)
   {
      delete g_presetManager;
      g_presetManager = NULL;
   }
   
   Print("๐ ุชู ุฅููุงุก ุงุฎุชุจุงุฑ ููู ุงูุฅุนุฏุงุฏุงุช");
}

//+------------------------------------------------------------------+
//| ุงุฎุชุจุงุฑ ุงูุฅุนุฏุงุฏุงุช                                               |
//+------------------------------------------------------------------+
void TestPresets()
{
   Print("๐งช ุจุฏุก ุงุฎุชุจุงุฑ ุงูุฅุนุฏุงุฏุงุช...");
   
   // ุงูุญุตูู ุนูู ุนุฏุฏ ุงูุฅุนุฏุงุฏุงุช
   int presetsCount = g_presetManager.GetPresetsCount();
   Print("๐ ุนุฏุฏ ุงูุฅุนุฏุงุฏุงุช ุงููุชุงุญุฉ: ", presetsCount);
   
   // ุงูุญุตูู ุนูู ุฃุณูุงุก ุงูุฅุนุฏุงุฏุงุช
   string presetNames[];
   g_presetManager.GetPresetNames(presetNames);
   
   Print("๐ ุฃุณูุงุก ุงูุฅุนุฏุงุฏุงุช:");
   for(int i = 0; i < ArraySize(presetNames); i++)
   {
      Print("   ", i + 1, ". ", presetNames[i]);
   }
   
   // ุงุฎุชุจุงุฑ ูู ุฅุนุฏุงุฏ
   for(int i = 0; i < presetsCount; i++)
   {
      Print("\\n๐ ุงุฎุชุจุงุฑ ุงูุฅุนุฏุงุฏ ุฑูู ", i + 1, ":");
      
      // ุงูุญุตูู ุนูู ุงูุฅุนุฏุงุฏ
      SPresetConfig preset = g_presetManager.GetPreset(i);
      
      // ุทุจุงุนุฉ ุงูุชูุงุตูู ุงูุฃุณุงุณูุฉ
      Print("๐ ุงูุงุณู: ", preset.name);
      Print("๐ ุงููุตู: ", preset.description);
      Print("๐ฐ ุฅุฏุงุฑุฉ ุงูุฃููุงู: ", MoneyManagementTypeToString(preset.mmType));
      Print("๐ ุงุชุฌุงู ุงูุชุฏุงูู: ", TradeDirectionFilterToString(preset.tradeDirection));
      Print("๐ช ุงุณุชุฑุงุชูุฌูุฉ ุงูุฎุฑูุฌ: ", ExitStrategyToString(preset.exitStrategy));
      Print("โ๏ธ ูุณุจุฉ ุงููุฎุงุทุฑุฉ: ", preset.riskPercent, "%");
      Print("๐ฏ ููุฉ ุงูููุท ุงููุทููุจุฉ: ", preset.minPatternStrength);
      Print("๐ ููุซูููุฉ ุงูููุท: ", preset.minPatternReliability);
      
      // ุทุจุงุนุฉ ุงูุชูุงุตูู ุงููุงููุฉ
      g_presetManager.PrintPresetDetails(i);
      
      // ุงุฎุชุจุงุฑ ุชุทุจูู ุงูุฅุนุฏุงุฏ
      bool applied = g_presetManager.ApplyPreset(i);
      Print("โ ุชุทุจูู ุงูุฅุนุฏุงุฏ: ", applied ? "ูุฌุญ" : "ูุดู");
   }
   
   // ุงุฎุชุจุงุฑ ุญูุธ ูุชุญููู ุงูุฅุนุฏุงุฏุงุช
   Print("\\n๐พ ุงุฎุชุจุงุฑ ุญูุธ ูุชุญููู ุงูุฅุนุฏุงุฏุงุช...");
   
   SPresetConfig testPreset = g_presetManager.GetPreset(0);
   bool saved = SavePresetToFile(testPreset, "test_preset.txt");
   Print("๐พ ุญูุธ ุงูุฅุนุฏุงุฏ: ", saved ? "ูุฌุญ" : "ูุดู");
   
   SPresetConfig loadedPreset;
   bool loaded = LoadPresetFromFile("test_preset.txt", loadedPreset);
   Print("๐ ุชุญููู ุงูุฅุนุฏุงุฏ: ", loaded ? "ูุฌุญ" : "ูุดู");
   
   Print("\\nโ ุงูุชูู ุงุฎุชุจุงุฑ ุงูุฅุนุฏุงุฏุงุช ุจูุฌุงุญ!");
}

//+------------------------------------------------------------------+
//| ุฏุงูุฉ ุงูุญุณุงุจ (ูุทููุจุฉ ูููุคุดุฑุงุช)                                   |
//+------------------------------------------------------------------+
int OnCalculate(const int rates_total,
                const int prev_calculated,
                const datetime &time[],
                const double &open[],
                const double &high[],
                const double &low[],
                const double &close[],
                const long &tick_volume[],
                const long &volume[],
                const int &spread[])
{
   // ูุง ุญุงุฌุฉ ูุญุณุงุจุงุช ูู ูุฐุง ุงูุงุฎุชุจุงุฑ
   return rates_total;
}

//+------------------------------------------------------------------+
//| ููุงูุฉ ุงูููู                                                     |
//+------------------------------------------------------------------+